diff --git a/dizoo/mujoco/config/hopper_collect_data_sac.py b/dizoo/mujoco/config/hopper_collect_data_sac.py
index 298e14d1a..7b9549969 100644
--- a/dizoo/mujoco/config/hopper_collect_data_sac.py
+++ b/dizoo/mujoco/config/hopper_collect_data_sac.py
@@ -52,13 +52,16 @@ if __name__ == "__main__":
     import argparse
 
     # for iter in [-1, 0, 100000, 200000]:
-    for iter in [1000000]:
+    # for iter in [1000000]:
+    # for iter in [300000, 400000, 500000]:
+    for iter in [600000, 700000, 800000, 900000]:
+
 
     # for iter in [-1]:
         # for seed in [0, 1,2,3,4]:
         # for seed in [5,6,7,8,9]:
-        for seed in range(10):
-
+        # for seed in range(10):
+        for seed in [8]:
 
             parser = argparse.ArgumentParser()
             parser.add_argument('--seed', '-s', type=int, default=seed)
diff --git a/dizoo/mujoco/config/hopper_sac_config.py b/dizoo/mujoco/config/hopper_sac_config.py
index ba75475eb..0bce45949 100755
--- a/dizoo/mujoco/config/hopper_sac_config.py
+++ b/dizoo/mujoco/config/hopper_sac_config.py
@@ -11,13 +11,8 @@ hopper_sac_config = dict(
         use_act_scale=True,
         clip_rewards=False,
         n_evaluator_episode=8,
-<<<<<<< Updated upstream
         # stop_value=6000,
         stop_value=99999,
-=======
-        clip_rewards=False,
-        stop_value=6000,
->>>>>>> Stashed changes
     ),
     policy=dict(
         cuda=True,
diff --git a/dizoo/mujoco/config/hopper_sac_visualize_action.py b/dizoo/mujoco/config/hopper_sac_visualize_action.py
index 4191ded7d..f253d794c 100644
--- a/dizoo/mujoco/config/hopper_sac_visualize_action.py
+++ b/dizoo/mujoco/config/hopper_sac_visualize_action.py
@@ -39,21 +39,24 @@ def train(args):
     el1000_erlt3500_cnt = 0
 
 
-    for iter in [-1, 0, 100000, 200000, 1000000]:
+    # for iter in [-1, 0, 100000, 200000, 1000000]:
+    for iter in [300000, 400000, 500000, 600000, 700000, 800000, 900000]:
     # for iter in [1000000]:
 
-        # if iter == -1:
-        #     visualize_path = f'/Users/puyuan/code/DI-engine/data_hopper_visualize/sac_seed0_1M/action_coverage/iter-best_action'
-        # else:
-        #     visualize_path = f'/Users/puyuan/code/DI-engine/data_hopper_visualize/sac_seed0_1M/action_coverage/iter-{iter}_action'
+        if iter == -1:
+            visualize_path = f'/Users/puyuan/code/DI-engine/data_hopper_visualize/sac_seed0_1M/action_coverage/iter-best_action'
+        else:
+            visualize_path = f'/Users/puyuan/code/DI-engine/data_hopper_visualize/sac_seed0_1M/action_coverage/iter-{iter}_action'
 
-        visualize_path = f'/Users/puyuan/code/DI-engine/data_hopper_visualize/sac_seed0_1M/action_coverage/el1000_erlt3000'
+        #  episode_length=1000 and episode_return>3000
+        # visualize_path = f'/Users/puyuan/code/DI-engine/data_hopper_visualize/sac_seed0_1M/action_coverage/el1000_erlt3000'
 
         if not os.path.exists(visualize_path):
                 os.mkdir(visualize_path)
         episode_actions_tsne = []
 
-        for seed in range(10):
+        # for seed in range(10):
+        for seed in [8]:
             # for seed in range(10,20):
 
             print(f'iter: {iter}', f'seed: {seed}')
@@ -90,34 +93,34 @@ def train(args):
             x_min, x_max = X_tsne.min(0), X_tsne.max(0)
             X_norm = (X_tsne - x_min) / (x_max - x_min)  # 归一化[0,1]
 
-            # x = X_norm[:, 0]
-            # y = X_norm[:, 1]
-            #
-            # fig = plt.figure()
-            # ax = fig.add_subplot(111)
-            # sc = ax.scatter(x, y, marker='o')
-            # # plt.xlabel('Original Action Dim0')
-            # # plt.ylabel('Original Action Dim1')
-            # ax.set_title('Action Coverage')
-            # ##fig.colorbar(sc)
-            # plt.savefig(f'{visualize_path}' + f'/1eps_action_collect_in_seed{seed}.png')
-            #
+            x = X_norm[:, 0]
+            y = X_norm[:, 1]
+
+            fig = plt.figure()
+            ax = fig.add_subplot(111)
+            sc = ax.scatter(x, y, marker='o')
+            # plt.xlabel('Original Action Dim0')
+            # plt.ylabel('Original Action Dim1')
+            ax.set_title('Action Coverage')
+            ##fig.colorbar(sc)
+            plt.savefig(f'{visualize_path}' + f'/1eps_action_collect_in_seed{seed}.png')
+
+
+            episode_actions_tsne.append(X_norm)
+
+            # if episode_actions_collect_in_one_seed.shape[0]==1000 and episode0_rewards_collect_in_seed0.sum()>3000:
+            #     # episode_length=1000 and episode_return>3000
+            #     el1000_erlt3000_cnt +=1
+            #     print(f'iter: {iter}', f'seed: {seed}', 'episode_length=1000 and episode_return>3000')
+            #     print(f'el1000_erlt3000_cnt: {el1000_erlt3000_cnt}')
+            #     episode_actions_tsne_el1000_erlt3000.append(X_norm)
             #
-            # episode_actions_tsne.append(X_norm)
-
-            if episode_actions_collect_in_one_seed.shape[0]==1000 and episode0_rewards_collect_in_seed0.sum()>3000:
-                # episode_length=1000 and episode_return>3000
-                el1000_erlt3000_cnt +=1
-                print(f'iter: {iter}', f'seed: {seed}', 'episode_length=1000 and episode_return>3000')
-                print(f'el1000_erlt3000_cnt: {el1000_erlt3000_cnt}')
-                episode_actions_tsne_el1000_erlt3000.append(X_norm)
-
-            if episode_actions_collect_in_one_seed.shape[0] == 1000 and episode0_rewards_collect_in_seed0.sum() > 3500:
-                # episode_length=1000 and episode_return>3500
-                el1000_erlt3500_cnt += 1
-                print(f'iter: {iter}', f'seed: {seed}', 'episode_length=1000 and episode_return>3500')
-                print(f'el1000_erlt3500_cnt: {el1000_erlt3500_cnt}')
-                episode_actions_tsne_el1000_erlt3500.append(X_norm)
+            # if episode_actions_collect_in_one_seed.shape[0] == 1000 and episode0_rewards_collect_in_seed0.sum() > 3500:
+            #     # episode_length=1000 and episode_return>3500
+            #     el1000_erlt3500_cnt += 1
+            #     print(f'iter: {iter}', f'seed: {seed}', 'episode_length=1000 and episode_return>3500')
+            #     print(f'el1000_erlt3500_cnt: {el1000_erlt3500_cnt}')
+            #     episode_actions_tsne_el1000_erlt3500.append(X_norm)
 
         # episode_actions_tsne = np.concatenate(episode_actions_tsne)
         #
@@ -155,35 +158,35 @@ def train(args):
         #     # fig.colorbar(sc)
         #     plt.savefig(f'{visualize_path}' + f'10eps_action_kmeans_{k}.png')
 
-    episode_actions_tsne_el1000_erlt3000 = np.concatenate(episode_actions_tsne_el1000_erlt3000)
-    # # original action coverage: tsne
-    x = episode_actions_tsne_el1000_erlt3000[:, 0]
-    y = episode_actions_tsne_el1000_erlt3000[:, 1]
-
-    fig = plt.figure()
-    ax = fig.add_subplot(111)
-    sc = ax.scatter(x, y, marker='o')
-
-    # plt.xlabel('Original Action Dim0')
-    # plt.ylabel('Original Action Dim1')
-    ax.set_title('Action Coverage')
-    # fig.colorbar(sc)
-    plt.savefig(f'{visualize_path}' + f'/el1000_erlt3000_action.png')
-
-    episode_actions_tsne_el1000_erlt3500 = np.concatenate(episode_actions_tsne_el1000_erlt3500)
-    # # original action coverage: tsne
-    x = episode_actions_tsne_el1000_erlt3500[:, 0]
-    y = episode_actions_tsne_el1000_erlt3500[:, 1]
-
-    fig = plt.figure()
-    ax = fig.add_subplot(111)
-    sc = ax.scatter(x, y, marker='o')
-
-    # plt.xlabel('Original Action Dim0')
-    # plt.ylabel('Original Action Dim1')
-    ax.set_title('Action Coverage')
-    # fig.colorbar(sc)
-    plt.savefig(f'{visualize_path}' + f'/el1000_erlt3500_action.png')
+    # episode_actions_tsne_el1000_erlt3000 = np.concatenate(episode_actions_tsne_el1000_erlt3000)
+    # # # original action coverage: tsne
+    # x = episode_actions_tsne_el1000_erlt3000[:, 0]
+    # y = episode_actions_tsne_el1000_erlt3000[:, 1]
+    #
+    # fig = plt.figure()
+    # ax = fig.add_subplot(111)
+    # sc = ax.scatter(x, y, marker='o')
+    #
+    # # plt.xlabel('Original Action Dim0')
+    # # plt.ylabel('Original Action Dim1')
+    # ax.set_title('Action Coverage')
+    # # fig.colorbar(sc)
+    # plt.savefig(f'{visualize_path}' + f'/el1000_erlt3000_action.png')
+    #
+    # episode_actions_tsne_el1000_erlt3500 = np.concatenate(episode_actions_tsne_el1000_erlt3500)
+    # # # original action coverage: tsne
+    # x = episode_actions_tsne_el1000_erlt3500[:, 0]
+    # y = episode_actions_tsne_el1000_erlt3500[:, 1]
+    #
+    # fig = plt.figure()
+    # ax = fig.add_subplot(111)
+    # sc = ax.scatter(x, y, marker='o')
+    #
+    # # plt.xlabel('Original Action Dim0')
+    # # plt.ylabel('Original Action Dim1')
+    # ax.set_title('Action Coverage')
+    # # fig.colorbar(sc)
+    # plt.savefig(f'{visualize_path}' + f'/el1000_erlt3500_action.png')
 
 if __name__ == "__main__":
     import argparse