diff --git a/dizoo/gym_hybrid/config/hardmove_mpdqn_config.py b/dizoo/gym_hybrid/config/hardmove_mpdqn_config.py
index 2b5024865..1ce1c1dfc 100644
--- a/dizoo/gym_hybrid/config/hardmove_mpdqn_config.py
+++ b/dizoo/gym_hybrid/config/hardmove_mpdqn_config.py
@@ -11,8 +11,8 @@ gym_hybrid_mpdqn_config = dict(
         # (bool) Scale output action into legal range [-1, 1].
         act_scale=True,
         # env_id='Sliding-v0',
-        # env_id='Moving-v0',
-        env_id='HardMove-v0',
+        env_id='Moving-v0',
+        # env_id='HardMove-v0',
         num_actuators=num_actuators,  # only for 'HardMove-v0'
         n_evaluator_episode=8,
         # stop_value=2,
@@ -33,17 +33,17 @@ gym_hybrid_mpdqn_config = dict(
         model=dict(
             obs_shape=10,
             # for 'Sliding-v0','Moving-v0'
-            # action_shape=dict(
-            #     action_type_shape=3,
-            #     action_args_shape=2,
-            # ),
-            # action_mask=[[1, 0], [0, 1], [0, 0]],
+            action_shape=dict(
+                action_type_shape=3,
+                action_args_shape=2,
+            ),
+            action_mask=[[1, 0], [0, 1], [0, 0]],
             # for 'HardMove-v0'
-            action_shape=dict( 
-                    action_type_shape=int(2** num_actuators),
-                    action_args_shape=int(num_actuators),
-                ),
-            action_mask=action_mask,
+            # action_shape=dict(
+            #         action_type_shape=int(2** num_actuators),
+            #         action_args_shape=int(num_actuators),
+            #     ),
+            # action_mask=action_mask,
             multi_pass=True,
         ),
         learn=dict(
@@ -105,7 +105,7 @@ create_config = gym_hybrid_mpdqn_create_config
 #     serial_pipeline([main_config, create_config], seed=0)
 
 def train(args):
-    main_config.exp_name = 'data_hardmove_n10/mpdqn' + '_seed' + f'{args.seed}'+'_3M'+'_cpu'
+    main_config.exp_name = 'data_mooving/mpdqn' + '_seed' + f'{args.seed}'+'_3M'+'_cpu'
 
     serial_pipeline([copy.deepcopy(main_config), copy.deepcopy(create_config)], seed=args.seed,max_env_step=int(3e6))